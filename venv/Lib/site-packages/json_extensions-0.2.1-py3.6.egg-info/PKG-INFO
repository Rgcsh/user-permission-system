Metadata-Version: 1.1
Name: json-extensions
Version: 0.2.1
Summary: Implements sereval JSON specs, like JSON Schema.
Home-page: https://github.com/johnnoone/json-extensions
Author: Xavier Barbosa
Author-email: clint.northwood@gmail.com
License: BSD
Description: ===============
        Json Extensions
        ===============
        
        .. image:: https://badge.fury.io/py/json-extensions.png
            :target: http://badge.fury.io/py/json-extensions
        
        .. image:: https://travis-ci.org/johnnoone/json-extensions.png?branch=master
            :target: https://travis-ci.org/johnnoone/json-extensions
        
        .. image:: https://pypip.in/d/json-extensions/badge.png
            :target: https://pypi.python.org/pypi/json-extensions
        
        This library implements several JSON specs, like `JSON Schema`_:
        
        * It works on python 2.7, python 3.3 and above
        * It is release under the `BSD license`_
        
        
        Installation
        ------------
        
        This library has no special dependencies. You can simply use pip:
        
        .. code-block:: bash
        
            $ pip install json-extensions
        
        
        Usage
        -----
        
        Let say you want to validate JSON like objects.
        You can describe you data with `JSON Schema`_:
        
        .. code-block:: python
        
            from json.schema import load
        
            # data will validate against this schema
            validator = load({
                'title': 'Example Schema',
                'type': 'object',
                'properties': {
                    'age': {
                        'description': 'Age in years',
                        'minimum': 0,
                        'type': 'integer'
                    },
                    'firstName': {
                        'type': 'string'
                    },
                    'lastName': {
                        'type': 'string'
                    }
                },
                'required': [
                    'firstName',
                    'lastName'
                ]
            })
        
            # validate this data
            validator.validate({
                'firstName': 'John',
                'lastName': 'Noone',
                'age': 33,
            })
        
        Other examples can be found in the documentation_ of in the tests_.
        
        .. _`JSON Schema`: http://json-schema.org
        .. _`BSD license`: LICENSE
        .. _documentation: http://json-extensions.readthedocs.org
        .. _tests: tests/
        
        
Keywords: setup
distutils
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Environment :: OpenStack
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
